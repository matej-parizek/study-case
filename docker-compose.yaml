services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: case_study
      POSTGRES_USER: orders
      POSTGRES_PASSWORD: Passw0rd#1
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orders -d case_study"]
      interval: 5s
      timeout: 3s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eligibility
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      # R2DBC (reactive)
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/case_study
      SPRING_R2DBC_USERNAME: orders
      SPRING_R2DBC_PASSWORD: Passw0rd#1

      # Liquibase (JDBC)
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/case_study
      SPRING_LIQUIBASE_USER: orders
      SPRING_LIQUIBASE_PASSWORD: Passw0rd#1

      EXTERNAL_CLIENTS_BASE_URL: ${EXTERNAL_CLIENTS_BASE_URL}
      EXTERNAL_CLIENTS_API_KEY: ${EXTERNAL_CLIENTS_API_KEY}
      EXTERNAL_ACCOUNTS_BASE_URL: ${EXTERNAL_ACCOUNTS_BASE_URL}
      EXTERNAL_ACCOUNTS_API_KEY: ${EXTERNAL_ACCOUNTS_API_KEY}

      SPRING_PROFILES_ACTIVE: docker

      JAVA_OPTS: "-Xms256m -Xmx512m"

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: /var/lib/postgresql/data
      o: bind
